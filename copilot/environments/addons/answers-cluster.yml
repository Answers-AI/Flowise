Parameters:
    App:
        Type: String
        Description: Your application's name.
    Env:
        Type: String
        Description: The name of the environment being deployed.
    # Customize your Aurora Serverless cluster by setting the default value of the following parameters.
    answersclusterDBName:
        Type: String
        Description: The name of the initial database to be created in the Aurora Serverless v2 cluster.
        Default: flowise
        # Cannot have special characters
        # Naming constraints: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints
    VPCID:
        Type: String
        Description: The ID of the VPC in which to create the Aurora Serverless v2 cluster.
        Default: ''
    PublicSubnets:
        Type: String
        Description: The IDs of the public subnets in which to create the Aurora Serverless v2 cluster.
        Default: ''
    PrivateSubnets:
        Type: String
        Description: The IDs of the private subnets in which to create the Aurora Serverless v2 cluster.
        Default: ''

Mappings:
    answersclusterEnvScalingConfigurationMap:
        last-rev:
            'DBMinCapacity': 0.5 # AllowedValues: from 0.5 through 128
            'DBMaxCapacity': 8 # AllowedValues: from 0.5 through 128

        staging:
            'DBMinCapacity': 0.5 # AllowedValues: from 0.5 through 128
            'DBMaxCapacity': 8 # AllowedValues: from 0.5 through 128

        All:
            'DBMinCapacity': 0.5 # AllowedValues: from 0.5 through 128
            'DBMaxCapacity': 8 # AllowedValues: from 0.5 through 128

Resources:
    answersclusterDBSubnetGroup:
        Type: 'AWS::RDS::DBSubnetGroup'
        Properties:
            DBSubnetGroupDescription: Group of public and private subnets for Aurora Serverless v2 cluster.
            SubnetIds: !Split [',', !Sub '${PublicSubnets},${PrivateSubnets}']
    answersclusterWorkloadSecurityGroup:
        Metadata:
            'aws:copilot:description': 'A security group for one or more workloads to access the Aurora Serverless v2 cluster answerscluster'
        Type: 'AWS::EC2::SecurityGroup'
        Properties:
            GroupDescription: 'The Security Group to access Aurora Serverless v2 cluster answerscluster.'
            VpcId: !Ref VPCID
            Tags:
                - Key: Name
                  Value: !Sub 'copilot-${App}-${Env}-Aurora'

    answersclusterDBClusterSecurityGroup:
        Metadata:
            'aws:copilot:description': 'A security group for your Aurora Serverless v2 cluster answerscluster'
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: The Security Group for the Aurora Serverless v2 cluster.
            VpcId: !Ref VPCID
            Tags:
                - Key: Name
                  Value: !Sub 'copilot-${App}-${Env}-Aurora'

    answersclusterDBClusterSecurityGroupIngressFromAnywhere:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            Description: Ingress from anywhere.
            GroupId: !Ref answersclusterDBClusterSecurityGroup
            IpProtocol: tcp
            ToPort: 5432
            FromPort: 5432
            CidrIp: 0.0.0.0/0

    answersclusterDBClusterSecurityGroupIngressFromWorkload:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            Description: Ingress from one or more workloads in the environment.
            GroupId: !Ref answersclusterDBClusterSecurityGroup
            IpProtocol: tcp
            ToPort: 5432
            FromPort: 5432
            SourceSecurityGroupId: !Ref answersclusterWorkloadSecurityGroup

    answersclusterAuroraSecret:
        Metadata:
            'aws:copilot:description': 'A Secrets Manager secret to store your DB credentials'
        Type: AWS::SecretsManager::Secret
        Properties:
            Description: !Sub Aurora main user secret for ${AWS::StackName}
            GenerateSecretString:
                SecretStringTemplate: '{"username": "postgres"}'
                GenerateStringKey: 'password'
                ExcludePunctuation: true
                IncludeSpace: false
                PasswordLength: 16
    answersclusterDBClusterParameterGroup:
        Metadata:
            'aws:copilot:description': 'A DB parameter group for engine configuration values'
        Type: 'AWS::RDS::DBClusterParameterGroup'
        Properties:
            Description: !Ref 'AWS::StackName'
            Family: 'aurora-postgresql14'
            Parameters:
                client_encoding: 'UTF8'

    answersclusterDBCluster:
        Metadata:
            'aws:copilot:description': 'The answerscluster Aurora Serverless v2 database cluster'
        Type: 'AWS::RDS::DBCluster'
        Properties:
            MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref answersclusterAuroraSecret, ':SecretString:username}}']]
            MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref answersclusterAuroraSecret, ':SecretString:password}}']]
            DatabaseName: !Ref answersclusterDBName
            Engine: 'aurora-postgresql'
            EngineVersion: '14.4'
            DBClusterParameterGroupName: !Ref answersclusterDBClusterParameterGroup
            DBSubnetGroupName: !Ref answersclusterDBSubnetGroup
            Port: 5432
            VpcSecurityGroupIds:
                - !Ref answersclusterDBClusterSecurityGroup
            ServerlessV2ScalingConfiguration:
                # Replace "All" below with "!Ref Env" to set different autoscaling limits per environment.
                MinCapacity: !FindInMap [answersclusterEnvScalingConfigurationMap, All, DBMinCapacity]
                MaxCapacity: !FindInMap [answersclusterEnvScalingConfigurationMap, All, DBMaxCapacity]

    answersclusterDBWriterInstance:
        Metadata:
            'aws:copilot:description': 'The answerscluster Aurora Serverless v2 writer instance'
        Type: 'AWS::RDS::DBInstance'
        Properties:
            DBClusterIdentifier: !Ref answersclusterDBCluster
            DBInstanceClass: db.serverless
            Engine: 'aurora-postgresql'
            PromotionTier: 1
            AvailabilityZone: !Select
                - 0
                - !GetAZs
                  Ref: AWS::Region

    answersclusterSecretAuroraClusterAttachment:
        Type: AWS::SecretsManager::SecretTargetAttachment
        Properties:
            SecretId: !Ref answersclusterAuroraSecret
            TargetId: !Ref answersclusterDBCluster
            TargetType: AWS::RDS::DBCluster

Outputs:
    answersclusterSecret:
        Description: "The JSON secret that holds the database username and password. Fields are 'host', 'port', 'dbname', 'username', 'password', 'dbClusterIdentifier' and 'engine'"
        Value: !Ref answersclusterAuroraSecret
        Export:
            Name: !Sub ${App}-${Env}-answersclusterAuroraSecret
    answersclusterSecurityGroup:
        Description: 'The security group to attach to the workload.'
        Value: !Ref answersclusterWorkloadSecurityGroup
        Export:
            Name: !Sub ${App}-${Env}-answersclusterSecurityGroup
